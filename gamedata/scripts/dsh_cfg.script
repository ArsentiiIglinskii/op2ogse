-- -*- mode: lua; coding: windows-1251-dos -*-

local cfg_fname  = "dsh_cfg.ltx"
local watch_keys = {
  {
    [ "name" ] = "active_jobs",
    [ "bind" ] = key_bindings,kACTIVE_JOBS,
  },
  {
    [ "name" ] = "map",
    [ "bind" ] = key_bindings.kMAP,
  },
  {
    [ "name" ] = "contacts",
    [ "bind" ] = key_bindings.kCONTACTS,
  },
}
local watch_opts = { "cam_inert", "r2_sun_lumscale_amb", }


local data = {}
function on_game_start()
  local cfg_path = getFS():update_path( "$game_saves$", cfg_fname )
  local f = io.open( cfg_path, "r" )
  if f then
    local lines = {}
    for l in f:lines() do
      table.insert( lines, l )
    end
    f:close()
    local cd = m_netpk.custom_data( table.concat( lines, "\n" ) )
    local t  = cd:getTable()
    if t.cfg then data = t.cfg end
  else
    on_after_main_menu()
  end
end


function on_before_main_menu()
  for _, o in ipairs( watch_opts ) do
    if data[ o ] then
      cmd( o, data[ o ] )
    end
  end
  for _, o in ipairs( watch_keys ) do
    if data[ o.name ] then
      cmd( "bind " .. o.name .. " " .. data[ o.name ] )
    end
  end
end


function on_after_main_menu()
  update_cfg()
  save()
end


function update_cfg()
  for _, o in ipairs( watch_opts ) do
    data[ o ] = get_con_float( o )
  end
  for _, o in ipairs( watch_keys ) do
    local dik   = bind_to_dik( o.bind )
    local kname = ogse_rebind_key.dik_to_name( dik )
    if kname ~= "" then
      data[ o.name ] = kname
    else
      data[ o.name ] = nil
    end
  end
end


function save()
  local cfg_path = getFS():update_path( "$game_saves$", cfg_fname )
  local f, err = io.open( cfg_path, "w+b" )
  ASSERT( f, "can't open %s: %s", cfg_path, err )
  local cfg = {
    [ "cfg" ] = data,
  }
  local cd = m_netpk.custom_data( cfg )
  f:write( cd:getString() )
  f:close()
end


function get_data()
  return data
end
