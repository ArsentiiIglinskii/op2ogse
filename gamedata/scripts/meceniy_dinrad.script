--\\*Модуль"Динамическая Радиация"..Меченый(Стрелок) & VasiliyTemnyi..Функция "плохих мест" из ОГСМ

local level_oor={
l01_escape = {lvid=595580, gvid=44},
l02_garbage = {lvid=384039, gvid=265},
l03_agroprom = {lvid=438379, gvid=693},
l04_darkvalley = {lvid=392517, gvid=813},
l06_rostok = {lvid=69283, gvid=1311},
l07_military = {lvid=915663, gvid=1546},
l10_radar = {lvid=796328, gvid=1868},
l11_pripyat = {lvid=295965, gvid=2269}
}

function random_spawn(anomcount)
	if meceniy_utils.din_rad == 0 then return end
	if meceniy_utils.din_rad == 1 then 
		local gv = level_oor[level.name()]["gvid"]
		local count = 0
		while count < anomcount do
			local lv = math.random(level_oor[level.name()]["lvid"])
			if not bad_sector(level.vertex_position(lv)) then
				count = count + 1
				local anomwid = math.random(1, 3)				-- состав группы аномалий
				local anomstr = math.random(1, 15)				-- мощность конкретной аномалии
				if anomwid == 1 then							-- слабая радиация, чтоб попугать :)
					spawn_anom("zone_radioactive_dyn", math.random(4,6), level.vertex_position(lv),lv,gv,0.001*anomstr,bit_not(0))
				end	
				if anomwid == 2 then							-- радиация с зоной среднего поражения и периферией
					spawn_anom("zone_radioactive_dyn", math.random(2,4), level.vertex_position(lv),lv,gv,0.002*anomstr,bit_not(0))
					spawn_anom("zone_radioactive_dyn", math.random(5,9), level.vertex_position(lv),lv,gv,0.001*anomstr,bit_not(0))
				end	
				if anomwid == 3 then							-- радиация с очагом, зоной среднего поражения и периферией
					spawn_anom("zone_radioactive_dyn", math.random(2,5), level.vertex_position(lv),lv,gv,0.005*anomstr,bit_not(0))
					spawn_anom("zone_radioactive_dyn", math.random(4,9), level.vertex_position(lv),lv,gv,0.002*anomstr,bit_not(0))
					spawn_anom("zone_radioactive_dyn", math.random(10,14), level.vertex_position(lv),lv,gv,0.001*anomstr,bit_not(0))
				end
			end
		end
	end
end

function disable()
	local obj
	for k, obj in alife():objects() do
			if obj:section()=="zone_radioactive_dyn" then
				obj:disable_anomaly()
			end
	end
	if db.actor:has_info("my1") then
		db.actor:disable_info_portion("my1")
	end
	if db.actor:has_info("my2") then
		db.actor:disable_info_portion("my2")
	end
	if db.actor:has_info("my3") then
		db.actor:disable_info_portion("my3")
	end
	if db.actor:has_info("my4") then
		db.actor:disable_info_portion("my4")
	end
	if db.actor:has_info("my5") then
		db.actor:disable_info_portion("my5")
	end
	if db.actor:has_info("my6") then
		db.actor:disable_info_portion("my6")
	end
	if db.actor:has_info("my7") then
		db.actor:disable_info_portion("my7")
	end
	if db.actor:has_info("my8") then
		db.actor:disable_info_portion("my8")
	end
	if db.actor:has_info("my9") then
		db.actor:disable_info_portion("my9")
	end
	if db.actor:has_info("my10") then
		db.actor:disable_info_portion("my10")
	end
	if db.actor:has_info("my11") then
		db.actor:disable_info_portion("my11")
	end	
end

function spawn_anom(anom_name,plosh,position,level_vertex_id,game_vertex_id,powers_a,time_dangeros)
	local obj = alife():create(anom_name,position,level_vertex_id,game_vertex_id)
	local pac = net_packet()
	obj:STATE_Write(pac)
	local game_vertex_id = pac:r_u16()
	local distance = pac:r_float()
	local direction = pac:r_u32()
	local level_vertex_id = pac:r_u32()
	local object_flags = pac:r_s32()
	local custom_data = pac:r_stringZ()
	local story_id = pac:r_s32()
	local spawn_story_id = pac:r_s32()
	local shape_count = pac:r_u8()
	for i=1,shape_count do
		local shape_type = pac:r_u8()
		if shape_type == 0 then
			local center = pac:r_vec3()
			local plosh = pac:r_float()
		else
			local box = pac:r_matrix()
		end
	end
	local restrikror_type = pac:r_u8()
	local powers = pac:r_float()
	local owner_id = pac:r_s32()
	local on_off_mode_enabled_time = pac:r_u32()
	local on_off_mode_disabled_time = pac:r_u32()
	local on_off_mode_shift_time = pac:r_u32()
	local offline_interactive_radius = pac:r_float()
	local artefact_spawn_places_count = pac:r_u16()
	local artefact_position_offset = pac:r_s32()
	local last_spawn_time_present = pac:r_u8()
	if pac:r_elapsed()~= 0 then 
		abort("left=%d",pac:r_elapsed())
	end
	pac:w_begin(game_vertex_id)
	pac:w_float(distance)
	pac:w_u32(direction)
	pac:w_u32(level_vertex_id)
	pac:w_u32(object_flags)
	pac:w_stringZ(custom_data)
	pac:w_s32(story_id)
	pac:w_s32(spawn_story_id)
	pac:w_u8(1)
	pac:w_u8(0)
	local sphere_center = vector()
	sphere_center:set(0,0,0)
	pac:w_vec3(sphere_center)
	pac:w_float(plosh)
	pac:w_u8(restrikror_type)
	if powers_a ~= nil then 
		powers = powers_a 
	end
	pac:w_float(powers)
	if time_dangeros == nil then 
		owner_id = bit_not(0) 
	else 
		owner_id = time_dangeros 
	end
	pac:w_u32(owner_id)
	pac:w_u32(on_off_mode_enabled_time)
	pac:w_u32(on_off_mode_disabled_time)
	pac:w_u32(on_off_mode_shift_time)
	pac:w_float(offline_interactive_radius)
	pac:w_u16(artefact_spawn_places_count)
	pac:w_u32(artefact_position_offset)
	pac:w_u8(last_spawn_time_present)
	pac:r_seek(0)
	obj:STATE_Read(pac,pac:w_tell())
	return obj
end

function level_spawn()
	local level_gg = level.name()
	if level_gg == "l01_escape" then
		if db.actor:dont_has_info("my1") then
			local numb = math.random(12,17)	
			random_spawn(numb)
			db.actor:give_info_portion("my1")
		end
	end
	if level_gg == "l02_garbage" then
		if db.actor:dont_has_info("my2") then
			local numb = math.random(15,20)
			random_spawn(numb)
			db.actor:give_info_portion("my2")
		end
	end
	if level_gg == "l03_agroprom" then
		if db.actor:dont_has_info("my3") then
			local numb = math.random(15,20)		
			random_spawn(numb)
			db.actor:give_info_portion("my3")
		end
	end
	if level_gg == "l04_darkvalley" then
		if db.actor:dont_has_info("my4") then
			local numb = math.random(10,15)
			random_spawn(numb)
			db.actor:give_info_portion("my4")
		end
	end
	if level_gg == "l06_rostok" then
		if db.actor:dont_has_info("my5") then
			local numb = math.random(8,12)
			random_spawn(numb)
			db.actor:give_info_portion("my5")
		end
	end
	if level_gg == "l07_military" then
		if db.actor:dont_has_info("my6") then
			local numb = math.random(15,20)
			random_spawn(numb)
			db.actor:give_info_portion("my6")
		end
	end
	if level_gg == "l10_radar" then
		if db.actor:dont_has_info("my7") then
			local numb = math.random(18,24)
			random_spawn(numb)
			db.actor:give_info_portion("my7")
		end
	end
	if level_gg == "l11_pripyat" then
		if db.actor:dont_has_info("my8") then
			local numb = math.random(15,20)
			random_spawn(numb)
			db.actor:give_info_portion("my8")
		end
	end
	if level_gg == "atp_for_test22" then
		if db.actor:dont_has_info("my9") then
			local numb = math.random(5,8)
			random_spawn(numb)
			db.actor:give_info_portion("my9")
		end
	end
	if level_gg == "puzir" then
		if db.actor:dont_has_info("my10") then
			local numb = math.random(5,8)
			random_spawn(numb)
			db.actor:give_info_portion("my10")
		end
	end
	if level_gg == "l08_yantar" then
		if db.actor:dont_has_info("my11") then
			local numb = math.random(10,14)
			random_spawn(numb)
			db.actor:give_info_portion("my11")
		end
	end
end

-- Проверяем, попадает ли аномалия в "bad-сектор"
function bad_sector(p_vector)

local k
local bad_list = {} --формируется по принципу x1>x2, y2>y1

-- Кордон
if level.name()=="l01_escape" then
bad_list.x1 = { -238, -164, -107, -160, 145, -65, 136,  35, 373, -146, -158, -226,  -76,  -40,  29, 147,  21,  91, 156,  38,  -71 }
bad_list.x2 = { -259, -230, -150, -180,  90, -70, 125,  20, 346, -164, -243, -262, -243,  -64,  -4,  74, -57,  19, 117,   8, -112 }
bad_list.y1 = { -138, -173, -400, -360, -50, 115, 305, 670, -49, -341, -180, -174, -410,  -89, -90, -62,  39, 120, 298, 658,  -90 }
bad_list.y2 = { -125, -123, -350, -344,  12, 200, 325, 690, -15, -235, -120, -117, -305,  -39, -27,  31, 111, 209, 351, 687,  -51 }
end

-- Свалка
if level.name() == "l02_garbage" then
bad_list.x1 = {   32,  -41,  68,   38, -230, 306,  -52,   50,  -14, -181,  -13,   95,  25,  93, -169 }
bad_list.x2 = {   29, -146,  15,   32, -306, 291,  -72,   17, -151, -248, -165,   50,   9,  -8, -211 }
bad_list.y1 = { -269,   -9, 199, -323,  -32, 132, -224, -291, -257, -186,  -70, -176, -25, 181,  -52 }
bad_list.y2 = { -260,   29, 262, -289,  -13, 154, -211, -243, -156, -118,   62, -120,  -4, 261,   34 }
end

-- Темная долина
if level.name() == "l04_darkvalley" then
bad_list.x1 = { -140, -119,  -36,  191, 114,  51,  51, -29, -26, 20,   73,   62, -137, -71,  51, 126,   74, -111 }
bad_list.x2 = { -217, -145,  -53,  106,  87, -12, -33, -73, -32,  8,   41,   50, -167, -93, -50,  81,   36, -151 }
bad_list.y1 = { -194, -526, -547, -301, -15, -91,  25, -23, -22,  5, -249, -225, -216,  39, -92, -27, -256, -533 }
bad_list.y2 = { -175, -478, -536, -223,  -1, -16,  50, -18,  25, 17, -233, -179, -171,  53,  53,  11, -217, -474 }
end

-- Агропром
if level.name() == "l03_agroprom" then
bad_list.x1 = {  67, -195, -101, -61, 291, 258, 296,  88, -67,   38,  -89 }
bad_list.x2 = { -53, -202, -200, -80, 265, 228, 264, -65, -88,    6, -210 }
bad_list.y1 = { -36,   85, -229,   6,   0, -24,   0, -52,  -1, -239, -244 }
bad_list.y2 = {  58,   98, -124,  21,   5,   6,  26,  70,  24, -207, -117 }
end

-- Дикая территория
if level.name() == "l06_rostok" then
bad_list.x1 = {  -85, -226, -235, -218, -113, -276, -206, -81, -250, -113,   68 }
bad_list.x2 = { -103, -235, -285, -242, -213, -297, -264, -99, -256, -215,  -14 }
bad_list.y1 = {  119,  135,   78,   29, -123,  104,   38, 117,    1, -123, -317 }
bad_list.y2 = {  151,  165,  112,   64,  -49,  146,   53, 151,   23,  -50, -217 }
end

-- Армейские склады
if level.name() == "l07_military" then
bad_list.x1 = { -305, -317, -209, -259, -340, -160,  -83,  96, 113, -218, -117, -43, -14, 77,  -2, -186, -340, -200, -173,   85,  -55, 111 }
bad_list.x2 = { -322, -347, -233, -277, -367, -195, -105,  89,  87, -242, -137, -84, -60,  0, -10, -202, -382, -235, -251, -146, -157,  13 }
bad_list.y1 = {   55,   37,  190,  234,  373,  350,  207, 308, 160,   39,    7,   8, -34, 10,   0,   35,  368,  181,   22,  -73,  188, 290 }
bad_list.y2 = {   67,   50,  211,  249,  405,  391,  235, 318, 184,   58,   22,  41, -10, 23, 109,   46,  406,  216,   78,   95,  267, 387 }
end

-- Радар
if level.name() == "l10_radar" then
bad_list.x1 = { 149, 390, 664 }
bad_list.x2 = {  75, 377, 609 }
bad_list.y1 = { -35, 141, 167 }
bad_list.y2 = { -20, 162, 200 }
end

-- Припять
if level.name() == "l11_pripyat" then
bad_list.x1 = {   31, 118, 115,  36,  18 }
bad_list.x2 = {   11,  58,  96,  27, -17 }
bad_list.y1 = { -296,  -2, 110, 280, 191 }
bad_list.y2 = { -266,  33, 159, 301, 210 }
end

-- Янтарь
if level.name() == "l08_yantar" then
bad_list.x1 = {  68}
bad_list.x2 = { -14}
bad_list.y1 = {-317}
bad_list.y2 = {-217}
end

-- АТП
if level.name() == "atp_for_test22" then
bad_list.x1 = {}
bad_list.x2 = {}
bad_list.y1 = {}
bad_list.y2 = {}
end

-- Новый Лес
if level.name() == "puzir" then
bad_list.x1 = {}
bad_list.x2 = {}
bad_list.y1 = {}
bad_list.y2 = {}
end


for k,v in pairs(bad_list.x1) do
	if (p_vector.x >= bad_list.x2[k] and p_vector.x <= bad_list.x1[k]) and (p_vector.z >= bad_list.y1[k] and p_vector.z <= bad_list.y2[k]) then
		return true
	end
end

return false

end
