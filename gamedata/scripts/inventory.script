-- -*- mode: lua; coding: windows-1251-dos -*-

local belt        = {}
local belt_id     = {}
local belt_obj    = {}
local need_update = true



function update()

	if (need_update == false) or has_alife_info("paused_on_load") then return end

	belt = {}
	belt_id = {}

	-- Сканируем инвентарь
	scan_inv()
	need_update = false

end


local hit_immunities = {
  [ "burn_immunity"          ] = 0,
  [ "strike_immunity"        ] = 0,
  [ "shock_immunity"         ] = 0,
  [ "wound_immunity"         ] = 0,
  [ "radiation_immunity"     ] = 0,
  [ "telepatic_immunity"     ] = 0,
  [ "chemical_burn_immunity" ] = 0,
  [ "explosion_immunity"     ] = 0,
  [ "fire_wound_immunity"    ] = 0,
}

local af_restore_speeds = {
  [ "additional_inventory_weight"  ] = 0,
  [ "additional_inventory_weight2" ] = 0,
  [ "bleeding_restore_speed"  ] = 0,
  [ "health_restore_speed"    ] = 0,
  [ "power_restore_speed"     ] = 0,
  [ "radiation_restore_speed" ] = 0,
  [ "satiety_restore_speed"   ] = 0,
}


-- Перебор предметов инвентаря
function scan_inv()
  for k, total in pairs( hit_immunities ) do
    hit_immunities[ k ] = 0
  end
  for k, total in pairs( af_restore_speeds ) do
    af_restore_speeds[ k ] = 0
  end
  belt_obj = {}
  for i = 0, db.actor:belt_count() - 1 do
    local item = db.actor:item_on_belt( i )
    local it_section = item:section()
    local it_id = item:id()
    belt[it_section] = ( belt[it_section] or 0 ) + 1
    belt_id[ item:id() ] = true
    if not belt_obj[ it_section ] then
      belt_obj[ it_section ] = {}
    end
    table.insert( belt_obj[ it_section ], item )
    ---- log1("CHECK0:"..tostring(section).." "..tostring(it_id))
    local imm_sect = get_string( it_section, "hit_absorbation_sect" )
    if imm_sect then
      for k, total in pairs( hit_immunities ) do
        local absorb_val = 1 - get_float( imm_sect, k, 1 )
        hit_immunities[ k ] = total + absorb_val
      end
    end
    for k, total in pairs( af_restore_speeds ) do
      local val = get_float( it_section, k, 0 )
      af_restore_speeds[ k ] = total + val
    end
  end
end


function on_belt_hit_immunity( sect )
  return hit_immunities[ sect ] or 0
end


function on_belt_restore_speed( k )
  return af_restore_speeds[ k ] or 0
end


-- Удаление из таблицы
function remove_from_table(tbl, section)
  if tbl[ section ] then
	if tbl[section] == 1 then
		tbl[section] = nil
	else
		tbl[section] = tbl[section] - 1
	end
  end
end

-- Открытие/закрытие инвентаря
function on_inventory_info(info_id)
	if info_id == "ui_inventory_hide" or info_id == "ui_trade_hide" then
		need_update = true
	end
end

-- Принудительное обновление инвентаря
function forced_inventory_update(mode)
	need_update = true
	if mode == true then
		update()
	end
end


-- предмет на поясе
function on_belt(sect)
	return belt[sect]
end

function items_on_belt()
	local count = 0
	for k,v in pairs(belt) do
		count = count+v
	end
	return count
end

function on_belt_obj( sect )
  return belt_obj[ sect ]
end
