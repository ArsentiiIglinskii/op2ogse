-- -*- mode: lua; coding: windows-1251-dos -*-

local quick_info, subscribed
function show_quick_info( text )
  subscribed = {
    { signal = "on_destroy", fun = this.on_destroy },
    { signal = "on_sniper_mode", fun = this.on_sniper_mode  }
  }
  local sm = ogse_signal.get_mgr()
  for _, s in ipairs( subscribed ) do
    sm:subscribe( s )
  end
  if not quick_info then
    quick_info = quick_info_static()
  end
  quick_info:show( text )
end


function hide_quick_info()
  local sm = ogse_signal.get_mgr()
  for _, s in ipairs( subscribed ) do
    sm:unsubscribe( s )
  end
  quick_info:hide()
end


function on_sniper_mode( mode )
  if mode == true then
    quick_info:reset()
  else
    quick_info:add_to_render()
  end
end


function on_destroy()
  quick_info:reset()
end


class "quick_info_static" ( CUIScriptWnd )
function quick_info_static:__init() super()
  self.xml = CScriptXmlInit()
  self.xml:ParseFile( "maingame.xml" )
  self:Init( 0, 0, 1024, 768 )
  self.quick_info = self.xml:InitStatic( "quick_info", self )
  self.quick_info:Show( false )
  self.quick_info:SetAutoDelete( true )
  self.xml = nil
end


function quick_info_static:add_to_render()
  get_hud():AddDialogToRender( self )
end


function quick_info_static:hide()
  if self.quick_info:IsShown() then
    self.quick_info:Show( false )
    self:reset()
  end
end


function quick_info_static:reset()
  get_hud():RemoveDialogToRender( self )
end



function quick_info_static:show( text )
  if text then
    self.quick_info:SetTextST( text )
  end
  if not self.quick_info:IsShown() then
    self.quick_info:Show( true )
    self:add_to_render()
  end
end
