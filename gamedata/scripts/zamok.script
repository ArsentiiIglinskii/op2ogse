-- -*- mode: lua; coding: windows-1251-dos -*-
local table_sort = table.sort
local table_remove = table.remove
local table_insert = table.insert

local gvtab ={}
function GameVertexId()
    local i = 0
	local ln
    while game_graph():valid_vertex_id(i) do
        ln = alife():level_name(game_graph():vertex(i):level_id())
        if not gvtab[ln] then
            gvtab[ln] = {}
        end
		table.insert(gvtab[ln], i)
		i = i+1
    end
    amk.dump_table(gvtab)  --вызываем функцию для вывода данных на экран
end

local lvtab ={}
function LevelVertexId()

    local i = 0
	local ln
	local lv
    while game_graph():valid_vertex_id(i) do  
		lv = game_graph():vertex(i):level_vertex_id()  --получаем левел вертекс по гейм вертексу
         --получаем имя уровня по его номеру из секции в  game_graph
        ln = alife():level_name(game_graph():vertex(i):level_id())  
        if not lvtab[ln] then  
            lvtab[ln] ={}  
        end
		table.insert(lvtab[ln], i..":"..lv)   --заполняем таблицу
		i = i+1
    end
	
	amk.dump_table(lvtab)  --вызываем функцию для вывода данных на экран
end

function test_r_line()
	local i, result, section, value
	local ammo = {}
	-- отсюда возьмём размеры полных пачек
	local sys = sys_ini
	-- список патронов возьмём из "death_generic.ltx"
	local ini = ini_file("misc\\death_generic.ltx")
	local n = ini:line_count("ammo_sections")
	for i=0,n-1 do
		result, section, value = ini:r_line("ammo_sections",i,"","")
		ammo[section] = {}
		ammo[section].repack = false
		ammo[section].box = sys:r_u32(section, "box_size")
	end
	amk.dump_table(ammo)
	
	ammo = {}
	-- отсюда возьмём размеры полных пачек
	local sys = sys_ini
	-- список патронов возьмём из "death_generic.ltx"
	local ini = ini_file("misc\\death_generic.ltx")
	local n = iniLinesCount("ammo_sections", "misc\\death_generic.ltx")
	for i=0,n-1 do
		result, section, value = getIniLine("ammo_sections",i,"","", "misc\\death_generic.ltx")
		ammo[section] = {}
		ammo[section].repack = false
		ammo[section].box = getIniValueFloat(section, "box_size", 1, nil)
	end
	amk.dump_table(ammo)
end

function restore()
	local parents = {}
	local items = {}
	local itemsCount = 0
	local sim = alife()
	local se_obj
	for i = 1, 65534 do
		se_obj = sim:object(i)
		if se_obj and se_obj:section_name() == "zamok" and se_obj.parent_id and se_obj.parent_id ~= 0 and se_obj.parent_id ~= 65535 then
			local se_box = sim:object(se_obj.parent_id) -- получаем серверный объект хозяина
			if se_box then
				if se_box:clsid() == clsid.inventory_box then
					amk_offline_alife.protected.ids[ se_box.id ] = true
				end
			else
				get_console():execute("load ~~~ FAILED restore protect box id: "..i.." name: "..protected_items.get_obj_name(se_obj))
			end
		end
	end
end

function sortItems(t1, t2)
	return t1[2] > t2[2]
end

function sortParents(t1, t2)
	return t1[2]["count"] > t2[2]["count"]
end


function remove( box, item )
  if item and item.section and item:section() == "zamok" and box then
    if not has_zamok( box, item ) then
      local box_id = box:id()
      if amk_offline_alife.protected.ids[ box_id ] then
        amk_offline_alife.protected.ids[ box_id ] = nil
        amk.send_tip( "С тайника убрали замок.", nil, nil, 5 )
      end
    end
    return true
  end
end


function has_zamok( box, zamok )
  for i = 0, box:inv_box_count() - 1 do
      local item_from_box = box:object_from_inv_box( i )
      if item_from_box:section() == zamok:section() then return true end
  end
  return false
end


function add( item )
  if
    item:section() == "zamok"
    and
    not has_alife_info( "biznes_remove_special_item" )
  then
    local sitem = alife():object( item:id() ) -- получаем серверный объект
    if sitem then
      local se_box = alife():object( sitem.parent_id ) -- получаем серверный объект хозяина
      if se_box and se_box:clsid() == clsid.inventory_box then
        local box = level.object_by_id( se_box.id )
        if not has_zamok( box, item ) then
          amk_offline_alife.protected.ids[ se_box.id ] = true
          amk_offline_alife.items[ se_box.id ] = nil
          local lname    = level.name()
          local off_npcs = amk_offline_alife.off_npcs
          if off_npcs[ lname ] then
            local inv_boxes = {}
            for _, box in ipairs( off_npcs[ lname ].inv_boxes ) do
              if box.id ~= se_box.id then
                table.insert( inv_boxes, box )
              end
            end
            off_npcs[ lname ].inv_boxes = inv_boxes
          end
          amk.send_tip( "Заперли тайник на замок.", nil, nil, 5 )
        end
      end
    end
    return true
  end
end
