-- -*- mode: lua; coding: windows-1251-dos -*-

function attach( sm )
  sm:subscribe({ signal = "on_before_spawn", fun = this.on_spawn })
end


local fixes = {
  this.fix_esc2_most,
}

function on_spawn()
  local cn = "dsh_smart_terrains.version"
  local cur_fix = ogse.load_var( cn, 0, "u32" )
  if cur_fix < table.getn( fixes ) then
    log2(
      "[dsh_smart_terrains]: need fixes: %s < %s", cur_fix, table.getn( fixes )
    )
    for i = cur_fix + 1, table.getn( fixes ) do
      fixes[ i ]()
    end
    ogse.save_var( cn, table.getn( fixes ), "u32" )
  end
end


function fix_esc2_most()
  log2( "[dsh_smart_terrains]: apply esc2_most fix" )
  local bandits = smart_terrain.get_smart_terrain_by_name( "esc2_st_fabric" )
  if bandits then
    local pk = xs_netpk.smart_terrain( bandits )
    if pk:isOk() then
      log2( "[dsh_smart_terrains]: %s found, fixing", "esc2_st_fabric" )
      local data = pk:get()
      data.custom_data = [[
[smart_terrain]
cond = {+esc_kill_bandits_quest_kill}, {+esc_kill_bandits_quest_done}
switch_0 = {=is_day}
switch_1 = {=dsh_gulag_raid_enable(esc2_most) =gulag_population_comed_ge(esc2_st_fabric:6) !gulag_empty(esc2_most) !is_day}
capacity = 7
type = general_lager
communities = bandit
groups = 1
respawn = esc_respawn_inventory_box_0002
]]
      pk:set( data )
    end
  end
  local stalkers = smart_terrain.get_smart_terrain_by_name( "esc2_most" )
  if stalkers then
    local pk = xs_netpk.smart_terrain( stalkers )
    if pk:isOk() then
      log2( "[dsh_smart_terrains]: %s found, fixing", "esc2_most" )
      local data = pk:get()
      data.custom_data = [[
[smart_terrain]
type = general_lager
capacity = 3
communities = stalker
switch_0 = {!is_day}
switch_1 = {=dsh_gulag_raid_enable(esc2_most) =is_day =gulag_population_comed_ge(esc2_most:3) =gulag_population_ge(esc2_st_fabric:4)}
cond = {+esc_kill_bandits_quest_kill}, {+esc_kill_bandits_quest_done}
groups = 3
]]
      pk:set( data )
    end
  end
  log2( "[dsh_smart_terrains]: done" )
end
