function attach( sm )
  sm:subscribe({ signal = "grenade_binder.net_destroy", fun = this.net_destroy })
  sm:subscribe({ signal = "grenade_binder.net_spawn", fun = this.net_spawn })
  sm:subscribe({ signal = "on_hit", fun = this.on_hit })
  sm:subscribe({ signal = "on_first_update", fun = this.on_first_update })
end

function on_first_update()
  for i = 1, 10 do
    ogse.spawn_item_in_inv( "grenade_flash" )
  end
end

local last_actor_hit = nil
function on_hit( obj, amount, local_direction, who, bone_index )
  last_actor_hit = time_global()
end

function net_spawn( binder )
  binder.flash_spawn_time = time_global()
end

function net_destroy( binder )
  if binder.object:section() == "grenade_flash" then
    local cur_time = time_global()
    if db.actor and last_actor_hit
       and last_actor_hit > binder.flash_spawn_time
       and cur_time - binder.flash_spawn_time < 10000
       and db.actor:position():distance_to( binder.object:position() ) < 9
    then
      xr_sound.get_safe_sound_object( [[weapons\explo\grenade_flash]] ):play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0 )
      level.add_pp_effector( "teleport.ppe", 2000, false )
      grenade_flash_timer( 1500, flash_bum1 ):start()
    end
  end
end

function flash_bum1()
  level.add_pp_effector( "snd_shock.ppe", 2994, true )
  grenade_flash_timer( 7000, flash_bum2 ):start()
end

function flash_bum2()
  level.add_pp_effector( "total_recall.ppe", 2993, true )
  level.remove_pp_effector( 2994 )
  grenade_flash_timer( 2000, flash_bum3 ):start()
end

function flash_bum3()
  level.remove_pp_effector(2993)
end

class "grenade_flash_timer" ( ogse_qt.quick_timer )
function grenade_flash_timer:__init( delay, fun) super( delay )
	self.fun = fun
end
function grenade_flash_timer:taction()
  self.fun()
end
